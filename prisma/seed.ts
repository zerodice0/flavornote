import { PrismaClient } from '@prisma/client';
import { hash } from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Seeding database for Phase 1...');

  // Create test user
  const hashedPassword = await hash('password123', 12);
  
  const testUser = await prisma.user.upsert({
    where: { email: 'test@flavornote.com' },
    update: {},
    create: {
      email: 'test@flavornote.com',
      nickname: 'ÌÖåÏä§Ìä∏Ïú†Ï†Ä',
      password: hashedPassword,
    },
  });

  console.log('‚úÖ Created test user:', testUser.email);

  // Create sample wishlist items
  const wishlist1 = await prisma.wishlist.create({
    data: {
      restaurantName: 'ÎßõÏûàÎäî ÌïúÏãùÎãπ',
      address: 'ÏÑúÏö∏Ïãú Í∞ïÎÇ®Íµ¨ Ïó≠ÏÇºÎèô 123-45',
      memo: 'ÏπúÍµ¨ Ï∂îÏ≤ú ÎßõÏßë, ÏÇºÍ≤πÏÇ¥Ïù¥ Ïú†Î™ÖÌïòÎã§Í≥† Ìï®',
      userId: testUser.id,
    },
  });

  const wishlist2 = await prisma.wishlist.create({
    data: {
      restaurantName: 'Ïù¥ÌÉàÎ¶¨Ïïà Î†àÏä§ÌÜ†Îûë Î°úÎßà',
      address: 'ÏÑúÏö∏Ïãú ÌôçÎåÄÏûÖÍµ¨Ïó≠ Í∑ºÏ≤ò',
      memo: 'ÌååÏä§ÌÉÄÏôÄ ÌîºÏûêÍ∞Ä ÎßõÏûàÎã§Îäî Î¶¨Î∑∞',
      userId: testUser.id,
    },
  });

  console.log('‚úÖ Created wishlist items:', [wishlist1.restaurantName, wishlist2.restaurantName]);

  // Create sample reviews
  const review1 = await prisma.review.create({
    data: {
      restaurantName: 'ÍπÄÏπòÏ∞åÍ∞ú Ï†ÑÎ¨∏Ï†ê',
      address: 'ÏÑúÏö∏Ïãú ÎßàÌè¨Íµ¨ ÌôçÎåÄÎèô 456-78',
      content: 'ÍπÄÏπòÏ∞åÍ∞úÍ∞Ä Ï†ïÎßê ÎßõÏûàÏóàÏñ¥Ïöî! Î∞ëÎ∞òÏ∞¨ÎèÑ Îã§ÏñëÌïòÍ≥† ÏÇ¨Ïû•ÎãòÏù¥ ÏπúÏ†àÌïòÏÑ∏Ïöî. Îã§ÏùåÏóê Îòê Í∞ÄÍ≥† Ïã∂ÏùÄ Í≥≥ÏûÖÎãàÎã§.',
      willRevisit: true,
      userId: testUser.id,
    },
  });

  const review2 = await prisma.review.create({
    data: {
      restaurantName: 'Ïä§Ïãú Ïò§ÎßàÏπ¥ÏÑ∏',
      address: 'ÏÑúÏö∏Ïãú Í∞ïÎÇ®Íµ¨ ÎÖºÌòÑÎèô 789-12',
      content: 'Ïã†ÏÑ†Ìïú Ïû¨Î£åÎ°ú ÎßåÎì† Ïä§ÏãúÍ∞Ä ÏùºÌíàÏù¥ÏóàÏäµÎãàÎã§. Í∞ÄÍ≤©ÏùÄ Ï°∞Í∏à ÎπÑÏã∏ÏßÄÎßå ÌäπÎ≥ÑÌïú ÎÇ† Í∞ÄÍ∏∞ Ï¢ãÏùÄ Í≥≥Ïù¥ÎÑ§Ïöî.',
      willRevisit: false,
      userId: testUser.id,
    },
  });

  console.log('‚úÖ Created reviews:', [review1.restaurantName, review2.restaurantName]);

  console.log('üéâ Phase 1 seed data created successfully!');
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå Seed error:', e);
    await prisma.$disconnect();
    process.exit(1);
  });