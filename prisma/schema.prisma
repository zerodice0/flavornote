// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Phase 1 Models: User, Wishlist, Review only
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  nickname  String
  password  String   // bcrypt hash
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations (Phase 1 only)
  wishlists Wishlist[]
  reviews   Review[]

  @@map("users")
}

model Wishlist {
  id             String   @id @default(cuid())
  restaurantName String   @map("restaurant_name")
  address        String?
  memo           String?
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  // Relations
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("wishlists")
}

model Review {
  id             String   @id @default(cuid())
  restaurantName String   @map("restaurant_name")
  address        String?
  content        String
  willRevisit    Boolean  @map("will_revisit")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  // Relations
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("reviews")
}